using UnityEngine;
using UnityEditor;
using System.IO;
using System.Text;

namespace Fwk.Editor
{
    public class MasterAssetGenerator : MonoBehaviour
    {
        [MenuItem("Tools/Master/Generate Asset Scripts")]
        public static void GenerateAssetScripts()
        {
            string masterFolderPath = Path.Combine(Application.dataPath, "Scripts/Master");
            string assetFolderPath = Path.Combine(Application.dataPath, "Scripts/Master/ScriptableObjects");

            if (!Directory.Exists(masterFolderPath))
            {
                Debug.LogError("Master folder not found at: " + masterFolderPath);
                return;
            }

            if (!Directory.Exists(assetFolderPath))
            {
                Directory.CreateDirectory(assetFolderPath);
                Debug.Log("Created ScriptableObjects folder at: " + assetFolderPath);
            }

            // Get all C# files in the Master folder (excluding subfolders for now)
            string[] masterFiles = Directory.GetFiles(masterFolderPath, "*.cs", SearchOption.TopDirectoryOnly);

            int generatedCount = 0;
            int skippedCount = 0;

            foreach (string filePath in masterFiles)
            {
                string fileName = Path.GetFileNameWithoutExtension(filePath);

                // Skip if it's a constants file or doesn't start with "Master"
                if (!fileName.StartsWith("Master") || fileName.Contains("Consts"))
                    continue;

                // Check if this is a MasterData class by reading the file content
                string fileContent = File.ReadAllText(filePath);
                if (!fileContent.Contains("MasterData<"))
                    continue;

                string assetClassName = fileName + "Asset";
                string assetFilePath = Path.Combine(assetFolderPath, assetClassName + ".cs");

                // Generate the asset script content
                string assetContent = GenerateAssetScript(fileName, assetClassName);

                // Write the asset file
                File.WriteAllText(assetFilePath, assetContent);
                generatedCount++;

                Debug.Log($"Generated asset script: {assetClassName}");
            }

            if (generatedCount > 0)
            {
                AssetDatabase.Refresh();
                Debug.Log($"Asset generation complete! Generated: {generatedCount}");
            }
            else
            {
                Debug.Log($"No new asset scripts generated. Skipped: {skippedCount} existing files");
            }
        }

        private static string GenerateAssetScript(string masterClassName, string assetClassName)
        {
            StringBuilder sb = new StringBuilder();

            sb.AppendLine("// This file is auto-generated by MasterAssetGenerator. Do not modify this file manually.");
            sb.AppendLine("using UnityEngine;");
            sb.AppendLine("using Fwk.Master;");
            sb.AppendLine();
            sb.AppendLine($"[CreateAssetMenu(fileName = \"{assetClassName}\", menuName = \"Master/{assetClassName}\", order = 0)]");
            sb.AppendLine($"public class {assetClassName} : MasterAsset<{masterClassName}>");
            sb.AppendLine("{");
            sb.AppendLine("}");

            return sb.ToString();
        }

        [MenuItem("Tools/Master/List Master Classes")]
        public static void ListMasterClasses()
        {
            string masterFolderPath = Path.Combine(Application.dataPath, "Scripts/Master");
            string[] masterFiles = Directory.GetFiles(masterFolderPath, "*.cs", SearchOption.TopDirectoryOnly);

            Debug.Log("=== Master Data Classes ===");

            foreach (string filePath in masterFiles)
            {
                string fileName = Path.GetFileNameWithoutExtension(filePath);

                if (!fileName.StartsWith("Master") || fileName.Contains("Consts"))
                    continue;

                string fileContent = File.ReadAllText(filePath);
                if (fileContent.Contains("MasterData<"))
                {
                    string assetClassName = fileName + "Asset";
                    string assetFilePath = Path.Combine(Application.dataPath, "Scripts/Master/ScriptableObjects", assetClassName + ".cs");
                    bool hasAsset = File.Exists(assetFilePath);

                    Debug.Log($"{fileName} -> {assetClassName} (Asset exists: {hasAsset})");
                }
            }
        }
    }
}